module.exports=[18622,(e,t,r)=>{t.exports=e.x("next/dist/compiled/next-server/app-page-turbo.runtime.prod.js",()=>require("next/dist/compiled/next-server/app-page-turbo.runtime.prod.js"))},56704,(e,t,r)=>{t.exports=e.x("next/dist/server/app-render/work-async-storage.external.js",()=>require("next/dist/server/app-render/work-async-storage.external.js"))},32319,(e,t,r)=>{t.exports=e.x("next/dist/server/app-render/work-unit-async-storage.external.js",()=>require("next/dist/server/app-render/work-unit-async-storage.external.js"))},20635,(e,t,r)=>{t.exports=e.x("next/dist/server/app-render/action-async-storage.external.js",()=>require("next/dist/server/app-render/action-async-storage.external.js"))},24725,(e,t,r)=>{t.exports=e.x("next/dist/server/app-render/after-task-async-storage.external.js",()=>require("next/dist/server/app-render/after-task-async-storage.external.js"))},70406,(e,t,r)=>{t.exports=e.x("next/dist/compiled/@opentelemetry/api",()=>require("next/dist/compiled/@opentelemetry/api"))},14747,(e,t,r)=>{t.exports=e.x("path",()=>require("path"))},24361,(e,t,r)=>{t.exports=e.x("util",()=>require("util"))},93695,(e,t,r)=>{t.exports=e.x("next/dist/shared/lib/no-fallback-error.external.js",()=>require("next/dist/shared/lib/no-fallback-error.external.js"))},61724,(e,t,r)=>{t.exports=e.x("next/dist/compiled/next-server/app-route-turbo.runtime.prod.js",()=>require("next/dist/compiled/next-server/app-route-turbo.runtime.prod.js"))},29173,(e,t,r)=>{t.exports=e.x("@prisma/client",()=>require("@prisma/client"))},98043,e=>{"use strict";e.s(["prisma",()=>r]);var t=e.i(29173);let r=globalThis.prisma??new t.PrismaClient({log:["query"]})},62643,e=>{"use strict";e.s(["uploadService",()=>i],62643);var t=e.i(53017),r=e.i(54799);let n=new class{async uploadFile({key:e,buffer:n,contentType:a,metadata:o={}}){try{(0,r.createHash)("sha256").update(n).digest("hex");let o=await (0,t.put)(e,n,{access:"public",contentType:a,addRandomSuffix:!1,cacheControlMaxAge:2592e3});return console.log(`File uploaded successfully: ${e}`),o.url}catch(e){throw console.error("Error uploading file to Vercel Blob:",e),Error(`Failed to upload file: ${e instanceof Error?e.message:"Unknown error"}`)}}async uploadBuffer(e,n,a="uploads"){try{let o=(0,r.createHash)("sha256").update(e).digest("hex"),i=this.getExtensionFromMime(n),s=`${a}/${o}${i}`;return(await (0,t.put)(s,e,{access:"public",contentType:n,addRandomSuffix:!1})).url}catch(e){throw console.error("Error uploading buffer to Vercel Blob:",e),Error(`Failed to upload buffer: ${e instanceof Error?e.message:"Unknown error"}`)}}async getFileUrl(e,r=3600){try{let r=await (0,t.list)({prefix:e,limit:1});if(0===r.blobs.length)throw Error(`File not found: ${e}`);return r.blobs[0].url}catch(e){throw console.error("Error getting file URL from Vercel Blob:",e),Error(`Failed to get file URL: ${e instanceof Error?e.message:"Unknown error"}`)}}async deleteFile(e){try{let r=await (0,t.list)({prefix:e,limit:1});if(0===r.blobs.length)return void console.warn(`File not found for deletion: ${e}`);await (0,t.del)(r.blobs[0].url),console.log(`File deleted successfully: ${e}`)}catch(e){throw console.error("Error deleting file from Vercel Blob:",e),Error(`Failed to delete file: ${e instanceof Error?e.message:"Unknown error"}`)}}async downloadFile(e){try{let r=await (0,t.list)({prefix:e,limit:1});if(0===r.blobs.length)throw Error(`File not found: ${e}`);let n=await fetch(r.blobs[0].url);if(!n.ok)throw Error(`HTTP ${n.status}: ${n.statusText}`);let a=await n.arrayBuffer();return Buffer.from(a)}catch(e){throw console.error("Error downloading file from Vercel Blob:",e),Error(`Failed to download file: ${e instanceof Error?e.message:"Unknown error"}`)}}async fileExists(e){try{return(await (0,t.list)({prefix:e,limit:1})).blobs.length>0}catch(e){return console.error("Error checking file existence in Vercel Blob:",e),!1}}async listFiles(e="",r=100){try{return(await (0,t.list)({prefix:e,limit:r})).blobs.map(e=>({key:this.extractKeyFromUrl(e.url),size:e.size,lastModified:new Date(e.uploadedAt),contentType:e.contentType||"application/octet-stream",url:e.url}))}catch(e){throw console.error("Error listing files from Vercel Blob:",e),Error(`Failed to list files: ${e instanceof Error?e.message:"Unknown error"}`)}}async getFileMetadata(e){try{let r=await (0,t.list)({prefix:e,limit:1});if(0===r.blobs.length)return null;let n=r.blobs[0];return{key:this.extractKeyFromUrl(n.url),size:n.size,lastModified:new Date(n.uploadedAt),contentType:n.contentType||"application/octet-stream",url:n.url}}catch(e){return console.error("Error getting file metadata from Vercel Blob:",e),null}}getExtensionFromMime(e){return({"application/pdf":".pdf","application/vnd.openxmlformats-officedocument.wordprocessingml.document":".docx","application/msword":".doc","text/plain":".txt","image/jpeg":".jpg","image/png":".png","image/gif":".gif","application/json":".json","text/csv":".csv"})[e]||""}extractKeyFromUrl(e){try{return new URL(e).pathname.substring(1)}catch{return e}}};var a=e.i(98043);let o=class{static calculateSHA256(e){return r.default.createHash("sha256").update(e).digest("hex")}static async checkForDuplicate(e){let t=this.calculateSHA256(e.buffer),r=await a.prisma.document.findUnique({where:{sha256:t},select:{id:!0,filename:!0,version:!0,tenderId:!0}});return{isDuplicate:!!r,existingDocument:r||void 0,sha256:t}}static async getNextVersion(e,t){let r=await a.prisma.document.findFirst({where:{tenderId:e,filename:{startsWith:t.split(".")[0]}},orderBy:{version:"desc"},select:{version:!0}});return(r?.version||0)+1}static async handleFileVersioning(e,t){let r=await this.checkForDuplicate(t);if(r.isDuplicate&&r.existingDocument)if(r.existingDocument.tenderId===e)return{shouldUpload:!1,version:r.existingDocument.version,existingDocumentId:r.existingDocument.id};else return{shouldUpload:!1,version:await this.getNextVersion(e,t.filename)};return{shouldUpload:!0,version:await this.getNextVersion(e,t.filename)}}static async createDocumentRecord(e){return await a.prisma.document.create({data:{tenderId:e.tenderId,filename:e.filename,mime:e.mime,sha256:e.sha256,pages:e.pages,version:e.version,url:e.url}})}},i=class{static async uploadTenderDocument(e,t){try{let r,i,s=await o.handleFileVersioning(e,t),l=o.calculateSHA256(t.buffer);if(s.shouldUpload){let a=`tenders/${e}/${t.filename}`;i=await n.uploadFile({key:a,buffer:t.buffer,contentType:t.contentType}),r=a}else if(s.existingDocumentId){let o=await a.prisma.document.findUnique({where:{id:s.existingDocumentId}});o?.url?i=o.url:(r=`tenders/${e}/${t.filename}`,i=await n.getFileUrl(r))}else r=`tenders/${e}/${t.filename}`,i=await n.getFileUrl(r);let d=await o.createDocumentRecord({tenderId:e,filename:t.filename,mime:t.contentType,sha256:l,version:s.version,url:i});return await this.logUploadEvent(e,d.id,t.filename),{documentId:d.id,filename:t.filename,version:s.version,isDuplicate:!s.shouldUpload,sha256:l,url:i}}catch(e){throw console.error("Error in upload service:",e),Error("Failed to process file upload")}}static async downloadDocument(e){try{let t=await a.prisma.document.findUnique({where:{id:e}});if(!t)throw Error("Document not found");let r=`tenders/${t.tenderId}/${t.filename}`;return await n.downloadFile(r)}catch(e){throw console.error("Error downloading document:",e),Error("Failed to download document")}}static async deleteDocument(e){try{let t=await a.prisma.document.findUnique({where:{id:e}});if(!t)throw Error("Document not found");let r=await a.prisma.document.count({where:{sha256:t.sha256}});if(1===r){let e=`tenders/${t.tenderId}/${t.filename}`;await n.deleteFile(e)}await a.prisma.document.delete({where:{id:e}}),await this.logDeletionEvent(t.tenderId,e,t.filename)}catch(e){throw console.error("Error deleting document:",e),Error("Failed to delete document")}}static async logUploadEvent(e,t,r){try{await a.prisma.auditLog.create({data:{actorId:"system",action:"UPLOAD_DOCUMENT",entity:"Document",entityId:t,diff:{filename:r,tenderId:e,action:"uploaded"}}})}catch(e){console.error("Error logging upload event:",e)}}static async logDeletionEvent(e,t,r){try{await a.prisma.auditLog.create({data:{actorId:"system",action:"DELETE_DOCUMENT",entity:"Document",entityId:t,diff:{filename:r,tenderId:e,action:"deleted"}}})}catch(e){console.error("Error logging deletion event:",e)}}}},19193,(e,t,r)=>{},8492,e=>{"use strict";e.s(["handler",()=>k,"patchFetch",()=>$,"routeModule",()=>I,"serverHooks",()=>C,"workAsyncStorage",()=>A,"workUnitAsyncStorage",()=>j],8492);var t=e.i(47909),r=e.i(74017),n=e.i(96250),a=e.i(59756),o=e.i(61916),i=e.i(69741),s=e.i(16795),l=e.i(87718),d=e.i(95169),u=e.i(47587),c=e.i(66012),p=e.i(70101),f=e.i(26937),m=e.i(10372),h=e.i(93695);e.i(52474);var g=e.i(220);e.s(["POST",()=>D],56015);var x=e.i(89171),w=e.i(57660),y=e.i(79832),E=e.i(98043),v=e.i(62643),R=e.i(69719);let b=["application/pdf","application/vnd.openxmlformats-officedocument.wordprocessingml.document","application/msword","text/plain"],T=R.z.object({url:R.z.string().url(),filename:R.z.string().optional(),tenderId:R.z.string().optional(),createNewTender:R.z.boolean().optional().default(!1),tenderTitle:R.z.string().optional()});async function D(e){try{let t=await (0,w.getServerSession)(y.authOptions);if(!t?.user)return x.NextResponse.json({error:"Unauthorized"},{status:401});if(!["ANALYST","REVIEWER","ADMIN"].includes(t.user.role))return x.NextResponse.json({error:"Forbidden"},{status:403});let r=e.headers.get("content-type");if(r?.includes("multipart/form-data"))return await U(e,t);if(r?.includes("application/json"))return await N(e,t);return x.NextResponse.json({error:"Unsupported content type"},{status:400})}catch(e){return console.error("Error in ingest API:",e),x.NextResponse.json({error:"Internal server error"},{status:500})}}async function U(e,t){try{let r=await e.formData(),n=r.get("file"),a=r.get("tenderId"),o="true"===r.get("createNewTender"),i=r.get("tenderTitle");if(!n)return x.NextResponse.json({error:"No file provided"},{status:400});if(n.size>0x3200000)return x.NextResponse.json({error:"File too large. Maximum size is 50MB"},{status:400});if(!b.includes(n.type))return x.NextResponse.json({error:`Unsupported file type. Allowed types: ${b.join(", ")}`},{status:400});let s=a;if(o){if(!i)return x.NextResponse.json({error:"Tender title required when creating new tender"},{status:400});let e=await E.prisma.tender.create({data:{title:i,status:"DRAFT"}});s=e.id,await E.prisma.auditLog.create({data:{actorId:t.user.id,action:"CREATE_TENDER",entity:"Tender",entityId:e.id,diff:{before:null,after:{title:i,status:"DRAFT"}}}})}if(!s)return x.NextResponse.json({error:"Tender ID required"},{status:400});if(!await E.prisma.tender.findUnique({where:{id:s}}))return x.NextResponse.json({error:"Tender not found"},{status:404});let l=Buffer.from(await n.arrayBuffer()),d=await v.uploadService.uploadTenderDocument(s,{filename:n.name,contentType:n.type,buffer:l});return await E.prisma.auditLog.create({data:{actorId:t.user.id,action:"UPLOAD_DOCUMENT",entity:"Document",entityId:d.documentId,diff:{before:null,after:{filename:d.filename,tenderId:s,isDuplicate:d.isDuplicate,version:d.version}}}}),x.NextResponse.json({success:!0,data:{document:d,tenderId:s,message:d.isDuplicate?"File already exists, linked to tender":"File uploaded successfully"}},{status:201})}catch(e){throw console.error("Error handling file upload:",e),e}}async function N(e,t){try{let r=await e.json(),{url:n,filename:a,tenderId:o,createNewTender:i,tenderTitle:s}=T.parse(r),l=o;if(i){if(!s)return x.NextResponse.json({error:"Tender title required when creating new tender"},{status:400});let e=await E.prisma.tender.create({data:{title:s,status:"DRAFT"}});l=e.id,await E.prisma.auditLog.create({data:{actorId:t.user.id,action:"CREATE_TENDER",entity:"Tender",entityId:e.id,diff:{before:null,after:{title:s,status:"DRAFT"}}}})}if(!l)return x.NextResponse.json({error:"Tender ID required"},{status:400});if(!await E.prisma.tender.findUnique({where:{id:l}}))return x.NextResponse.json({error:"Tender not found"},{status:404});let d=await fetch(n,{headers:{"User-Agent":"TenderAutomator/1.0"}});if(!d.ok)return x.NextResponse.json({error:`Failed to fetch file: ${d.status} ${d.statusText}`},{status:400});let u=parseInt(d.headers.get("content-length")||"0");if(u>0x3200000)return x.NextResponse.json({error:`File too large: ${u} bytes`},{status:400});let c=d.headers.get("content-type")||"application/octet-stream";if(!b.includes(c))return x.NextResponse.json({error:`Unsupported file type: ${c}`},{status:400});let p=Buffer.from(await d.arrayBuffer()),f=a||`document-${Date.now()}.${({"application/pdf":"pdf","application/vnd.openxmlformats-officedocument.wordprocessingml.document":"docx","application/msword":"doc","text/plain":"txt"})[c]||"bin"}`,m=await v.uploadService.uploadTenderDocument(l,{filename:f,contentType:c,buffer:p});return await E.prisma.auditLog.create({data:{actorId:t.user.id,action:"INGEST_URL",entity:"Document",entityId:m.documentId,diff:{before:null,after:{filename:m.filename,sourceUrl:n,tenderId:l,isDuplicate:m.isDuplicate,version:m.version}}}}),x.NextResponse.json({success:!0,data:{document:m,tenderId:l,sourceUrl:n,message:m.isDuplicate?"File already exists, linked to tender":"File ingested successfully"}},{status:201})}catch(e){if(e instanceof R.z.ZodError)return x.NextResponse.json({error:"Validation error",details:e.issues},{status:400});throw console.error("Error handling URL ingestion:",e),e}}var F=e.i(56015);let I=new t.AppRouteRouteModule({definition:{kind:r.RouteKind.APP_ROUTE,page:"/api/ingest/route",pathname:"/api/ingest",filename:"route",bundlePath:""},distDir:".next",relativeProjectDir:"",resolvedPagePath:"[project]/src/app/api/ingest/route.ts",nextConfigOutput:"",userland:F}),{workAsyncStorage:A,workUnitAsyncStorage:j,serverHooks:C}=I;function $(){return(0,n.patchFetch)({workAsyncStorage:A,workUnitAsyncStorage:j})}async function k(e,t,n){var x;let w="/api/ingest/route";w=w.replace(/\/index$/,"")||"/";let y=await I.prepare(e,t,{srcPage:w,multiZoneDraftMode:!1});if(!y)return t.statusCode=400,t.end("Bad Request"),null==n.waitUntil||n.waitUntil.call(n,Promise.resolve()),null;let{buildId:E,params:v,nextConfig:R,isDraftMode:b,prerenderManifest:T,routerServerContext:D,isOnDemandRevalidate:U,revalidateOnlyGenerated:N,resolvedPathname:F}=y,A=(0,i.normalizeAppPath)(w),j=!!(T.dynamicRoutes[A]||T.routes[F]);if(j&&!b){let e=!!T.routes[F],t=T.dynamicRoutes[A];if(t&&!1===t.fallback&&!e)throw new h.NoFallbackError}let C=null;!j||I.isDev||b||(C="/index"===(C=F)?"/":C);let $=!0===I.isDev||!j,k=j&&!$,q=e.method||"GET",S=(0,o.getTracer)(),O=S.getActiveScopeSpan(),P={params:v,prerenderManifest:T,renderOpts:{experimental:{cacheComponents:!!R.experimental.cacheComponents,authInterrupts:!!R.experimental.authInterrupts},supportsDynamicResponse:$,incrementalCache:(0,a.getRequestMeta)(e,"incrementalCache"),cacheLifeProfiles:null==(x=R.experimental)?void 0:x.cacheLife,isRevalidate:k,waitUntil:n.waitUntil,onClose:e=>{t.on("close",e)},onAfterTaskError:void 0,onInstrumentationRequestError:(t,r,n)=>I.onRequestError(e,t,n,D)},sharedContext:{buildId:E}},M=new s.NodeNextRequest(e),_=new s.NodeNextResponse(t),H=l.NextRequestAdapter.fromNodeNextRequest(M,(0,l.signalFromNodeResponse)(t));try{let i=async r=>I.handle(H,P).finally(()=>{if(!r)return;r.setAttributes({"http.status_code":t.statusCode,"next.rsc":!1});let n=S.getRootSpanAttributes();if(!n)return;if(n.get("next.span_type")!==d.BaseServerSpan.handleRequest)return void console.warn(`Unexpected root span type '${n.get("next.span_type")}'. Please report this Next.js issue https://github.com/vercel/next.js`);let a=n.get("next.route");if(a){let e=`${q} ${a}`;r.setAttributes({"next.route":a,"http.route":a,"next.span_name":e}),r.updateName(e)}else r.updateName(`${q} ${e.url}`)}),s=async o=>{var s,l;let d=async({previousCacheEntry:r})=>{try{if(!(0,a.getRequestMeta)(e,"minimalMode")&&U&&N&&!r)return t.statusCode=404,t.setHeader("x-nextjs-cache","REVALIDATED"),t.end("This page could not be found"),null;let s=await i(o);e.fetchMetrics=P.renderOpts.fetchMetrics;let l=P.renderOpts.pendingWaitUntil;l&&n.waitUntil&&(n.waitUntil(l),l=void 0);let d=P.renderOpts.collectedTags;if(!j)return await (0,c.sendResponse)(M,_,s,P.renderOpts.pendingWaitUntil),null;{let e=await s.blob(),t=(0,p.toNodeOutgoingHttpHeaders)(s.headers);d&&(t[m.NEXT_CACHE_TAGS_HEADER]=d),!t["content-type"]&&e.type&&(t["content-type"]=e.type);let r=void 0!==P.renderOpts.collectedRevalidate&&!(P.renderOpts.collectedRevalidate>=m.INFINITE_CACHE)&&P.renderOpts.collectedRevalidate,n=void 0===P.renderOpts.collectedExpire||P.renderOpts.collectedExpire>=m.INFINITE_CACHE?void 0:P.renderOpts.collectedExpire;return{value:{kind:g.CachedRouteKind.APP_ROUTE,status:s.status,body:Buffer.from(await e.arrayBuffer()),headers:t},cacheControl:{revalidate:r,expire:n}}}}catch(t){throw(null==r?void 0:r.isStale)&&await I.onRequestError(e,t,{routerKind:"App Router",routePath:w,routeType:"route",revalidateReason:(0,u.getRevalidateReason)({isRevalidate:k,isOnDemandRevalidate:U})},D),t}},h=await I.handleResponse({req:e,nextConfig:R,cacheKey:C,routeKind:r.RouteKind.APP_ROUTE,isFallback:!1,prerenderManifest:T,isRoutePPREnabled:!1,isOnDemandRevalidate:U,revalidateOnlyGenerated:N,responseGenerator:d,waitUntil:n.waitUntil});if(!j)return null;if((null==h||null==(s=h.value)?void 0:s.kind)!==g.CachedRouteKind.APP_ROUTE)throw Object.defineProperty(Error(`Invariant: app-route received invalid cache entry ${null==h||null==(l=h.value)?void 0:l.kind}`),"__NEXT_ERROR_CODE",{value:"E701",enumerable:!1,configurable:!0});(0,a.getRequestMeta)(e,"minimalMode")||t.setHeader("x-nextjs-cache",U?"REVALIDATED":h.isMiss?"MISS":h.isStale?"STALE":"HIT"),b&&t.setHeader("Cache-Control","private, no-cache, no-store, max-age=0, must-revalidate");let x=(0,p.fromNodeOutgoingHttpHeaders)(h.value.headers);return(0,a.getRequestMeta)(e,"minimalMode")&&j||x.delete(m.NEXT_CACHE_TAGS_HEADER),!h.cacheControl||t.getHeader("Cache-Control")||x.get("Cache-Control")||x.set("Cache-Control",(0,f.getCacheControlHeader)(h.cacheControl)),await (0,c.sendResponse)(M,_,new Response(h.value.body,{headers:x,status:h.value.status||200})),null};O?await s(O):await S.withPropagatedContext(e.headers,()=>S.trace(d.BaseServerSpan.handleRequest,{spanName:`${q} ${e.url}`,kind:o.SpanKind.SERVER,attributes:{"http.method":q,"http.target":e.url}},s))}catch(t){if(O||t instanceof h.NoFallbackError||await I.onRequestError(e,t,{routerKind:"App Router",routePath:A,routeType:"route",revalidateReason:(0,u.getRevalidateReason)({isRevalidate:k,isOnDemandRevalidate:U})}),j)throw t;return await (0,c.sendResponse)(M,_,new Response(null,{status:500})),null}}}];

//# sourceMappingURL=%5Broot-of-the-server%5D__e8fb223b._.js.map
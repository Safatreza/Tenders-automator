{"version":3,"sources":["turbopack:///[project]/src/lib/prisma.ts","turbopack:///[project]/src/app/api/errors/route.ts","turbopack:///[project]/node_modules/next/dist/esm/build/templates/app-route.js"],"sourcesContent":["import { PrismaClient } from '@prisma/client'\n\nconst globalForPrisma = globalThis as unknown as {\n  prisma: PrismaClient | undefined\n}\n\nexport const prisma =\n  globalForPrisma.prisma ??\n  new PrismaClient({\n    log: ['query'],\n  })\n\nif (process.env.NODE_ENV !== 'production') globalForPrisma.prisma = prisma","// Error Reporting API Endpoint\n// Collects and processes client-side errors for monitoring\n\nimport { NextRequest, NextResponse } from 'next/server'\nimport { getServerSession } from 'next-auth'\nimport { authOptions } from '@/lib/auth'\nimport { prisma } from '@/lib/prisma'\nimport { z } from 'zod'\n\nconst ErrorReportSchema = z.object({\n  type: z.enum(['api_error', 'component_error', 'unhandled_error']),\n  error: z.object({\n    name: z.string(),\n    message: z.string(),\n    stack: z.string().optional()\n  }),\n  context: z.object({\n    endpoint: z.string().optional(),\n    component: z.string().optional(),\n    attempt: z.number().optional(),\n    config: z.any().optional(),\n    errorId: z.string().optional(),\n    componentStack: z.string().optional()\n  }).optional(),\n  timestamp: z.string(),\n  url: z.string().optional(),\n  userAgent: z.string().optional()\n})\n\nexport async function POST(request: NextRequest) {\n  try {\n    // Get user session if available (non-blocking)\n    const session = await getServerSession(authOptions).catch(() => null)\n\n    const body = await request.json()\n\n    // Validate request body\n    const errorReport = ErrorReportSchema.parse(body)\n\n    // Extract client info\n    const userAgent = request.headers.get('user-agent') || errorReport.userAgent\n    const referer = request.headers.get('referer') || errorReport.url\n\n    // Create error log entry\n    const errorLog = await prisma.errorLog.create({\n      data: {\n        type: errorReport.type,\n        name: errorReport.error.name,\n        message: errorReport.error.message,\n        stack: errorReport.error.stack,\n        context: errorReport.context ? JSON.stringify(errorReport.context) : null,\n        url: referer,\n        userAgent,\n        userId: session?.user?.id || null,\n        timestamp: new Date(errorReport.timestamp)\n      }\n    })\n\n    // Log to console in development\n    if (process.env.NODE_ENV === 'development') {\n      console.group(`ðŸš¨ Client Error Report (${errorLog.id})`)\n      console.error('Type:', errorReport.type)\n      console.error('Error:', errorReport.error)\n      console.error('Context:', errorReport.context)\n      console.error('User:', session?.user?.email || 'Anonymous')\n      console.groupEnd()\n    }\n\n    // In production, you might want to:\n    // 1. Send to external error monitoring service (Sentry, etc.)\n    // 2. Send alerts for critical errors\n    // 3. Aggregate and analyze error patterns\n\n    if (process.env.NODE_ENV === 'production') {\n      // Example: Send to Sentry\n      /*\n      Sentry.captureException(new Error(errorReport.error.message), {\n        tags: {\n          type: errorReport.type,\n          component: errorReport.context?.component\n        },\n        extra: {\n          context: errorReport.context,\n          errorId: errorLog.id\n        },\n        user: session?.user ? {\n          id: session.user.id,\n          email: session.user.email\n        } : undefined\n      })\n      */\n\n      // Example: Send Slack notification for critical errors\n      if (shouldNotifyForError(errorReport)) {\n        await sendErrorNotification(errorReport, errorLog.id)\n      }\n    }\n\n    return NextResponse.json({\n      success: true,\n      data: {\n        errorId: errorLog.id,\n        logged: true\n      }\n    })\n\n  } catch (error) {\n    console.error('Error processing error report:', error)\n\n    // Don't let error reporting fail the request\n    return NextResponse.json({\n      success: false,\n      error: 'Failed to log error'\n    }, { status: 500 })\n  }\n}\n\n// Helper function to determine if error should trigger notification\nfunction shouldNotifyForError(errorReport: z.infer<typeof ErrorReportSchema>): boolean {\n  const criticalErrors = [\n    'ChunkLoadError', // Code splitting failures\n    'TypeError', // Potential breaking changes\n    'ReferenceError', // Missing dependencies\n    'SecurityError' // Security-related issues\n  ]\n\n  const criticalComponents = [\n    'ErrorBoundary',\n    'AuthProvider',\n    'APIClient'\n  ]\n\n  return (\n    criticalErrors.includes(errorReport.error.name) ||\n    (errorReport.context?.component && criticalComponents.includes(errorReport.context.component)) ||\n    errorReport.type === 'api_error' && errorReport.context?.endpoint === '/api/auth'\n  )\n}\n\n// Helper function to send error notifications\nasync function sendErrorNotification(\n  errorReport: z.infer<typeof ErrorReportSchema>,\n  errorId: string\n): Promise<void> {\n  try {\n    // Example Slack webhook notification\n    const slackWebhookUrl = process.env.SLACK_ERROR_WEBHOOK_URL\n\n    if (slackWebhookUrl) {\n      await fetch(slackWebhookUrl, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          text: `ðŸš¨ Critical Error Detected`,\n          blocks: [\n            {\n              type: 'header',\n              text: {\n                type: 'plain_text',\n                text: 'ðŸš¨ Critical Error Report'\n              }\n            },\n            {\n              type: 'section',\n              fields: [\n                {\n                  type: 'mrkdwn',\n                  text: `*Error ID:* ${errorId}`\n                },\n                {\n                  type: 'mrkdwn',\n                  text: `*Type:* ${errorReport.type}`\n                },\n                {\n                  type: 'mrkdwn',\n                  text: `*Name:* ${errorReport.error.name}`\n                },\n                {\n                  type: 'mrkdwn',\n                  text: `*URL:* ${errorReport.url || 'Unknown'}`\n                }\n              ]\n            },\n            {\n              type: 'section',\n              text: {\n                type: 'mrkdwn',\n                text: `*Message:*\\n\\`\\`\\`${errorReport.error.message}\\`\\`\\``\n              }\n            }\n          ]\n        })\n      })\n    }\n\n    // Example email notification\n    const adminEmail = process.env.ADMIN_EMAIL\n\n    if (adminEmail) {\n      // Would integrate with email service (SendGrid, etc.)\n      console.log(`Would send email to ${adminEmail} for error ${errorId}`)\n    }\n\n  } catch (notificationError) {\n    console.error('Failed to send error notification:', notificationError)\n    // Don't throw - notification failure shouldn't break error logging\n  }\n}\n\n// GET endpoint for error log viewing (admin only)\nexport async function GET(request: NextRequest) {\n  try {\n    const session = await getServerSession(authOptions)\n\n    if (!session?.user || session.user.role !== 'ADMIN') {\n      return NextResponse.json({ error: 'Forbidden' }, { status: 403 })\n    }\n\n    const { searchParams } = new URL(request.url)\n    const page = parseInt(searchParams.get('page') || '1')\n    const limit = Math.min(parseInt(searchParams.get('limit') || '50'), 100)\n    const type = searchParams.get('type')\n\n    const where = type ? { type } : {}\n\n    const [errors, total] = await Promise.all([\n      prisma.errorLog.findMany({\n        where,\n        include: {\n          user: {\n            select: {\n              id: true,\n              email: true,\n              name: true\n            }\n          }\n        },\n        orderBy: { timestamp: 'desc' },\n        skip: (page - 1) * limit,\n        take: limit\n      }),\n      prisma.errorLog.count({ where })\n    ])\n\n    return NextResponse.json({\n      success: true,\n      data: {\n        errors,\n        pagination: {\n          page,\n          limit,\n          total,\n          pages: Math.ceil(total / limit)\n        }\n      }\n    })\n\n  } catch (error) {\n    console.error('Error fetching error logs:', error)\n    return NextResponse.json(\n      { error: 'Failed to fetch error logs' },\n      { status: 500 }\n    )\n  }\n}","import { AppRouteRouteModule } from \"next/dist/esm/server/route-modules/app-route/module.compiled\";\nimport { RouteKind } from \"next/dist/esm/server/route-kind\";\nimport { patchFetch as _patchFetch } from \"next/dist/esm/server/lib/patch-fetch\";\nimport { getRequestMeta } from \"next/dist/esm/server/request-meta\";\nimport { getTracer, SpanKind } from \"next/dist/esm/server/lib/trace/tracer\";\nimport { normalizeAppPath } from \"next/dist/esm/shared/lib/router/utils/app-paths\";\nimport { NodeNextRequest, NodeNextResponse } from \"next/dist/esm/server/base-http/node\";\nimport { NextRequestAdapter, signalFromNodeResponse } from \"next/dist/esm/server/web/spec-extension/adapters/next-request\";\nimport { BaseServerSpan } from \"next/dist/esm/server/lib/trace/constants\";\nimport { getRevalidateReason } from \"next/dist/esm/server/instrumentation/utils\";\nimport { sendResponse } from \"next/dist/esm/server/send-response\";\nimport { fromNodeOutgoingHttpHeaders, toNodeOutgoingHttpHeaders } from \"next/dist/esm/server/web/utils\";\nimport { getCacheControlHeader } from \"next/dist/esm/server/lib/cache-control\";\nimport { INFINITE_CACHE, NEXT_CACHE_TAGS_HEADER } from \"next/dist/esm/lib/constants\";\nimport { NoFallbackError } from \"next/dist/esm/shared/lib/no-fallback-error.external\";\nimport { CachedRouteKind } from \"next/dist/esm/server/response-cache\";\nimport * as userland from \"INNER_APP_ROUTE\";\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new AppRouteRouteModule({\n    definition: {\n        kind: RouteKind.APP_ROUTE,\n        page: \"/api/errors/route\",\n        pathname: \"/api/errors\",\n        filename: \"route\",\n        bundlePath: \"\"\n    },\n    distDir: process.env.__NEXT_RELATIVE_DIST_DIR || '',\n    relativeProjectDir: process.env.__NEXT_RELATIVE_PROJECT_DIR || '',\n    resolvedPagePath: \"[project]/src/app/api/errors/route.ts\",\n    nextConfigOutput,\n    userland\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return _patchFetch({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\nexport { routeModule, workAsyncStorage, workUnitAsyncStorage, serverHooks, patchFetch,  };\nexport async function handler(req, res, ctx) {\n    var _nextConfig_experimental;\n    let srcPage = \"/api/errors/route\";\n    // turbopack doesn't normalize `/index` in the page name\n    // so we need to to process dynamic routes properly\n    // TODO: fix turbopack providing differing value from webpack\n    if (process.env.TURBOPACK) {\n        srcPage = srcPage.replace(/\\/index$/, '') || '/';\n    } else if (srcPage === '/index') {\n        // we always normalize /index specifically\n        srcPage = '/';\n    }\n    const multiZoneDraftMode = process.env.__NEXT_MULTI_ZONE_DRAFT_MODE;\n    const prepareResult = await routeModule.prepare(req, res, {\n        srcPage,\n        multiZoneDraftMode\n    });\n    if (!prepareResult) {\n        res.statusCode = 400;\n        res.end('Bad Request');\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n        return null;\n    }\n    const { buildId, params, nextConfig, isDraftMode, prerenderManifest, routerServerContext, isOnDemandRevalidate, revalidateOnlyGenerated, resolvedPathname } = prepareResult;\n    const normalizedSrcPage = normalizeAppPath(srcPage);\n    let isIsr = Boolean(prerenderManifest.dynamicRoutes[normalizedSrcPage] || prerenderManifest.routes[resolvedPathname]);\n    if (isIsr && !isDraftMode) {\n        const isPrerendered = Boolean(prerenderManifest.routes[resolvedPathname]);\n        const prerenderInfo = prerenderManifest.dynamicRoutes[normalizedSrcPage];\n        if (prerenderInfo) {\n            if (prerenderInfo.fallback === false && !isPrerendered) {\n                throw new NoFallbackError();\n            }\n        }\n    }\n    let cacheKey = null;\n    if (isIsr && !routeModule.isDev && !isDraftMode) {\n        cacheKey = resolvedPathname;\n        // ensure /index and / is normalized to one key\n        cacheKey = cacheKey === '/index' ? '/' : cacheKey;\n    }\n    const supportsDynamicResponse = // If we're in development, we always support dynamic HTML\n    routeModule.isDev === true || // If this is not SSG or does not have static paths, then it supports\n    // dynamic HTML.\n    !isIsr;\n    // This is a revalidation request if the request is for a static\n    // page and it is not being resumed from a postponed render and\n    // it is not a dynamic RSC request then it is a revalidation\n    // request.\n    const isRevalidate = isIsr && !supportsDynamicResponse;\n    const method = req.method || 'GET';\n    const tracer = getTracer();\n    const activeSpan = tracer.getActiveScopeSpan();\n    const context = {\n        params,\n        prerenderManifest,\n        renderOpts: {\n            experimental: {\n                cacheComponents: Boolean(nextConfig.experimental.cacheComponents),\n                authInterrupts: Boolean(nextConfig.experimental.authInterrupts)\n            },\n            supportsDynamicResponse,\n            incrementalCache: getRequestMeta(req, 'incrementalCache'),\n            cacheLifeProfiles: (_nextConfig_experimental = nextConfig.experimental) == null ? void 0 : _nextConfig_experimental.cacheLife,\n            isRevalidate,\n            waitUntil: ctx.waitUntil,\n            onClose: (cb)=>{\n                res.on('close', cb);\n            },\n            onAfterTaskError: undefined,\n            onInstrumentationRequestError: (error, _request, errorContext)=>routeModule.onRequestError(req, error, errorContext, routerServerContext)\n        },\n        sharedContext: {\n            buildId\n        }\n    };\n    const nodeNextReq = new NodeNextRequest(req);\n    const nodeNextRes = new NodeNextResponse(res);\n    const nextReq = NextRequestAdapter.fromNodeNextRequest(nodeNextReq, signalFromNodeResponse(res));\n    try {\n        const invokeRouteModule = async (span)=>{\n            return routeModule.handle(nextReq, context).finally(()=>{\n                if (!span) return;\n                span.setAttributes({\n                    'http.status_code': res.statusCode,\n                    'next.rsc': false\n                });\n                const rootSpanAttributes = tracer.getRootSpanAttributes();\n                // We were unable to get attributes, probably OTEL is not enabled\n                if (!rootSpanAttributes) {\n                    return;\n                }\n                if (rootSpanAttributes.get('next.span_type') !== BaseServerSpan.handleRequest) {\n                    console.warn(`Unexpected root span type '${rootSpanAttributes.get('next.span_type')}'. Please report this Next.js issue https://github.com/vercel/next.js`);\n                    return;\n                }\n                const route = rootSpanAttributes.get('next.route');\n                if (route) {\n                    const name = `${method} ${route}`;\n                    span.setAttributes({\n                        'next.route': route,\n                        'http.route': route,\n                        'next.span_name': name\n                    });\n                    span.updateName(name);\n                } else {\n                    span.updateName(`${method} ${req.url}`);\n                }\n            });\n        };\n        const handleResponse = async (currentSpan)=>{\n            var _cacheEntry_value;\n            const responseGenerator = async ({ previousCacheEntry })=>{\n                try {\n                    if (!getRequestMeta(req, 'minimalMode') && isOnDemandRevalidate && revalidateOnlyGenerated && !previousCacheEntry) {\n                        res.statusCode = 404;\n                        // on-demand revalidate always sets this header\n                        res.setHeader('x-nextjs-cache', 'REVALIDATED');\n                        res.end('This page could not be found');\n                        return null;\n                    }\n                    const response = await invokeRouteModule(currentSpan);\n                    req.fetchMetrics = context.renderOpts.fetchMetrics;\n                    let pendingWaitUntil = context.renderOpts.pendingWaitUntil;\n                    // Attempt using provided waitUntil if available\n                    // if it's not we fallback to sendResponse's handling\n                    if (pendingWaitUntil) {\n                        if (ctx.waitUntil) {\n                            ctx.waitUntil(pendingWaitUntil);\n                            pendingWaitUntil = undefined;\n                        }\n                    }\n                    const cacheTags = context.renderOpts.collectedTags;\n                    // If the request is for a static response, we can cache it so long\n                    // as it's not edge.\n                    if (isIsr) {\n                        const blob = await response.blob();\n                        // Copy the headers from the response.\n                        const headers = toNodeOutgoingHttpHeaders(response.headers);\n                        if (cacheTags) {\n                            headers[NEXT_CACHE_TAGS_HEADER] = cacheTags;\n                        }\n                        if (!headers['content-type'] && blob.type) {\n                            headers['content-type'] = blob.type;\n                        }\n                        const revalidate = typeof context.renderOpts.collectedRevalidate === 'undefined' || context.renderOpts.collectedRevalidate >= INFINITE_CACHE ? false : context.renderOpts.collectedRevalidate;\n                        const expire = typeof context.renderOpts.collectedExpire === 'undefined' || context.renderOpts.collectedExpire >= INFINITE_CACHE ? undefined : context.renderOpts.collectedExpire;\n                        // Create the cache entry for the response.\n                        const cacheEntry = {\n                            value: {\n                                kind: CachedRouteKind.APP_ROUTE,\n                                status: response.status,\n                                body: Buffer.from(await blob.arrayBuffer()),\n                                headers\n                            },\n                            cacheControl: {\n                                revalidate,\n                                expire\n                            }\n                        };\n                        return cacheEntry;\n                    } else {\n                        // send response without caching if not ISR\n                        await sendResponse(nodeNextReq, nodeNextRes, response, context.renderOpts.pendingWaitUntil);\n                        return null;\n                    }\n                } catch (err) {\n                    // if this is a background revalidate we need to report\n                    // the request error here as it won't be bubbled\n                    if (previousCacheEntry == null ? void 0 : previousCacheEntry.isStale) {\n                        await routeModule.onRequestError(req, err, {\n                            routerKind: 'App Router',\n                            routePath: srcPage,\n                            routeType: 'route',\n                            revalidateReason: getRevalidateReason({\n                                isRevalidate,\n                                isOnDemandRevalidate\n                            })\n                        }, routerServerContext);\n                    }\n                    throw err;\n                }\n            };\n            const cacheEntry = await routeModule.handleResponse({\n                req,\n                nextConfig,\n                cacheKey,\n                routeKind: RouteKind.APP_ROUTE,\n                isFallback: false,\n                prerenderManifest,\n                isRoutePPREnabled: false,\n                isOnDemandRevalidate,\n                revalidateOnlyGenerated,\n                responseGenerator,\n                waitUntil: ctx.waitUntil\n            });\n            // we don't create a cacheEntry for ISR\n            if (!isIsr) {\n                return null;\n            }\n            if ((cacheEntry == null ? void 0 : (_cacheEntry_value = cacheEntry.value) == null ? void 0 : _cacheEntry_value.kind) !== CachedRouteKind.APP_ROUTE) {\n                var _cacheEntry_value1;\n                throw Object.defineProperty(new Error(`Invariant: app-route received invalid cache entry ${cacheEntry == null ? void 0 : (_cacheEntry_value1 = cacheEntry.value) == null ? void 0 : _cacheEntry_value1.kind}`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E701\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n            if (!getRequestMeta(req, 'minimalMode')) {\n                res.setHeader('x-nextjs-cache', isOnDemandRevalidate ? 'REVALIDATED' : cacheEntry.isMiss ? 'MISS' : cacheEntry.isStale ? 'STALE' : 'HIT');\n            }\n            // Draft mode should never be cached\n            if (isDraftMode) {\n                res.setHeader('Cache-Control', 'private, no-cache, no-store, max-age=0, must-revalidate');\n            }\n            const headers = fromNodeOutgoingHttpHeaders(cacheEntry.value.headers);\n            if (!(getRequestMeta(req, 'minimalMode') && isIsr)) {\n                headers.delete(NEXT_CACHE_TAGS_HEADER);\n            }\n            // If cache control is already set on the response we don't\n            // override it to allow users to customize it via next.config\n            if (cacheEntry.cacheControl && !res.getHeader('Cache-Control') && !headers.get('Cache-Control')) {\n                headers.set('Cache-Control', getCacheControlHeader(cacheEntry.cacheControl));\n            }\n            await sendResponse(nodeNextReq, nodeNextRes, new Response(cacheEntry.value.body, {\n                headers,\n                status: cacheEntry.value.status || 200\n            }));\n            return null;\n        };\n        // TODO: activeSpan code path is for when wrapped by\n        // next-server can be removed when this is no longer used\n        if (activeSpan) {\n            await handleResponse(activeSpan);\n        } else {\n            await tracer.withPropagatedContext(req.headers, ()=>tracer.trace(BaseServerSpan.handleRequest, {\n                    spanName: `${method} ${req.url}`,\n                    kind: SpanKind.SERVER,\n                    attributes: {\n                        'http.method': method,\n                        'http.target': req.url\n                    }\n                }, handleResponse));\n        }\n    } catch (err) {\n        // if we aren't wrapped by base-server handle here\n        if (!activeSpan && !(err instanceof NoFallbackError)) {\n            await routeModule.onRequestError(req, err, {\n                routerKind: 'App Router',\n                routePath: normalizedSrcPage,\n                routeType: 'route',\n                revalidateReason: getRevalidateReason({\n                    isRevalidate,\n                    isOnDemandRevalidate\n                })\n            });\n        }\n        // rethrow so that we can handle serving error page\n        // If this is during static generation, throw the error again.\n        if (isIsr) throw err;\n        // Otherwise, send a 500 response.\n        await sendResponse(nodeNextReq, nodeNextRes, new Response(null, {\n            status: 500\n        }));\n        return null;\n    }\n}\n\n//# sourceMappingURL=app-route.js.map\n"],"names":[],"mappings":"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","ignoreList":[2]}